{
  "compilerOptions": {
    /* ===================== Проект ===================== */
    // "incremental": true,                              /* Сохранять .tsbuildinfo для инкрементальной сборки */
    // "composite": true,                                /* Позволить использовать проект как ссылку для других проектов */
    // "tsBuildInfoFile": "./.tsbuildinfo",              /* Путь к файлу сборочной информации */
    // "disableSourceOfProjectReferenceRedirect": true,  /* Отключить предпочтение исходных файлов вместо .d.ts при ссылках на проекты */
    // "disableSolutionSearching": true,                 /* Отключить много-проектный поиск */
    // "disableReferencedProjectLoad": true,             /* Меньше проектов загружать автоматически */

    /* ===================== Язык и окружение ===================== */
    "target": "ES2020",                                  /* Целевая версия JavaScript */
    "lib": ["ES2020"],                                   /* Подключить стандартные библиотеки JS */
    // "jsx": "preserve",                                /* Формат генерации JSX */
    // "experimentalDecorators": true,                   /* Поддержка декораторов */
    // "emitDecoratorMetadata": true,                    /* Генерация метаданных для декораторов */
    // "jsxFactory": "",                                 /* Заводская функция для JSX */
    // "jsxFragmentFactory": "",                         /* Заводская функция для JSX-фрагментов */
    // "jsxImportSource": "",                            /* Модуль для JSX-фабрик */
    // "reactNamespace": "",                             /* Объект для JSX */
    // "noLib": true,                                    /* Не подключать стандартные библиотеки */
    // "useDefineForClassFields": true,                  /* Соответствовать стандарту ECMAScript по полям классов */
    // "moduleDetection": "auto",                        /* Автоматическое определение модулей */

    /* ===================== Модули ===================== */
    "module": "NodeNext",                                /* Поддержка ESM (import.meta.url) */
    "moduleResolution": "NodeNext",                      /* Разрешение модулей через Node.js */
    "rootDir": "./src",                                  /* Корень исходников */
    "outDir": "./dist",                                  /* Папка для собранных файлов */
    "resolveJsonModule": true,                           /* Разрешить импорт .json файлов */
    "allowSyntheticDefaultImports": true,                /* Разрешить синтетические импорты по умолчанию */
    "esModuleInterop": true,                             /* Интероперабельность с CommonJS */
    // "baseUrl": "./",                                  /* Базовый путь для модулей */
    // "paths": {},                                      /* Переназначение путей */
    // "rootDirs": [],                                   /* Несколько папок как одна */
    // "typeRoots": [],                                  /* Папки для поиска типов */
    "types": ["node"],                                   /* Типы для Node.js */
    // "allowUmdGlobalAccess": true,                     /* Доступ к глобальным UMD-пакетам */
    // "moduleSuffixes": [],                             /* Суффиксы файлов модулей */
    // "allowImportingTsExtensions": true,               /* Импорт файлов с расширениями .ts и др. */
    // "rewriteRelativeImportExtensions": true,          /* Перезапись расширений импортов */
    // "resolvePackageJsonExports": true,                /* Учитывать package.json exports */
    // "resolvePackageJsonImports": true,                /* Учитывать package.json imports */
    // "customConditions": [],                           /* Пользовательские условия разрешения модулей */
    // "noUncheckedSideEffectImports": true,             /* Проверка побочных эффектов при импорте */
    // "allowArbitraryExtensions": true,                 /* Импорт файлов с любыми расширениями */
    // "noResolve": true,                                /* Отключить разрешение модулей */

    /* ===================== JavaScript-поддержка ===================== */
    // "allowJs": true,                                  /* Разрешить JS файлы */
    // "checkJs": true,                                  /* Проверять типы в JS */
    // "maxNodeModuleJsDepth": 1,                        /* Глубина проверки node_modules */

    /* ===================== Генерация файлов ===================== */
    // "declaration": true,                              /* Генерировать .d.ts файлы */
    // "declarationMap": true,                           /* Генерировать карты для .d.ts */
    // "emitDeclarationOnly": true,                      /* Только декларации без JS */
    // "sourceMap": true,                                /* Генерировать sourcemaps */
    // "inlineSourceMap": true,                          /* Инлайн sourcemaps */
    // "noEmit": true,                                   /* Не эмитить файлы вообще */
    // "outFile": "./",                                  /* Вывод в один файл (не рекомендуется) */
    "noEmitOnError": true,                               /* Не генерировать JS при ошибках компиляции */
    // "removeComments": true,                           /* Убирать комментарии */
    // "importHelpers": true,                            /* Использовать tslib */
    // "downlevelIteration": true,                       /* Эмулировать итерацию для старых движков */
    // "sourceRoot": "",                                 /* Корень исходников для дебага */
    // "mapRoot": "",                                    /* Место для карт */
    // "inlineSources": true,                            /* Встраивать исходники в карты */
    // "emitBOM": true,                                  /* Добавлять BOM в начале файлов */
    // "newLine": "crlf",                                /* Символ перевода строки */
    // "stripInternal": true,                            /* Убирать внутренние декларации */
    // "declarationDir": "./",                           /* Папка для деклараций */

    /* ===================== Интероп Constraints ===================== */
    // "isolatedModules": true,                          /* Каждый модуль изолированно */
    // "verbatimModuleSyntax": true,                     /* Не изменять синтаксис модулей */
    // "isolatedDeclarations": true,                     /* Требовать аннотации экспорта */
    // "erasableSyntaxOnly": true,                       /* Только допустимый по стандарту синтаксис */

    /* ===================== Проверка типов ===================== */
    "strict": true,                                      /* Включить все строгие проверки */
    // "noImplicitAny": true,                            /* Ошибка на неявные any */
    // "strictNullChecks": true,                         /* Учитывать null и undefined */
    // "strictFunctionTypes": true,                      /* Строгая проверка типов функций */
    // "strictBindCallApply": true,                      /* Проверка bind/call/apply */
    // "strictPropertyInitialization": true,             /* Проверка инициализации свойств */
    // "noImplicitThis": true,                           /* Ошибка на неявное this */
    // "alwaysStrict": true,                             /* Всегда вставлять 'use strict' */
    // "noUnusedLocals": true,                           /* Ошибка на неиспользуемые переменные */
    // "noUnusedParameters": true,                       /* Ошибка на неиспользуемые параметры */
    // "exactOptionalPropertyTypes": true,               /* Точное поведение optional типов */
    // "noImplicitReturns": true,                        /* Требовать явного return */
    // "noFallthroughCasesInSwitch": true,               /* Запретить проваливание в switch */
    // "noUncheckedIndexedAccess": true,                 /* Добавлять undefined при индексировании */
    // "noImplicitOverride": true,                       /* Требовать override в классах */
    // "noPropertyAccessFromIndexSignature": true,       /* Запретить прямой доступ через индекс */
    // "allowUnusedLabels": true,                        /* Разрешить неиспользуемые метки */
    // "allowUnreachableCode": true,                     /* Разрешить недостижимый код */

    /* ===================== Полнота проверки ===================== */
    "skipLibCheck": true                                 /* Не проверять типы в node_modules */
  },
  "include": ["src/**/*.ts"],
  "exclude": ["node_modules", "dist"]
}
